services:

  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:${PGDATA}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_NAME}"]
      interval: 4s
      timeout: 3s
      retries: 10

  app:
    build: .
    container_name: app
    depends_on:
      db:
        condition: service_healthy
    expose:
      - 8080
      - 8081
    ports:
      - "8080:8080" 
      - "8081:8081"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/healthy"]
      interval: 4s
      timeout: 3s
      retries: 10
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - OTEL_EXPORTER_OTLP_INSECURE=true
      - OTEL_TRACES_EXPORTER=jaeger

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686"
    environment:
      - LOG_LEVEL=debug   

  prometheus:
    image: prom/prometheus:v2.40.4
    ports:
      - 9090:9090
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml          

volumes: 
  pg_data:         